{"ast":null,"code":"var _jsxFileName = \"/Users/philranzato/Documents/GoLang/go/src/k8s-intro/react/webapp/src/components/connection.js\";\nimport React from 'react';\nlet endpoint = \"http://localhost\";\n\nclass Connection extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    const from = data.get(\"from\");\n    const fromNS = data.get(\"fromNamespace\");\n    const to = data.get(\"to\");\n    const toNS = data.get(\"toNamespace\");\n    const body = {\n      from: from,\n      fromNamespace: fromNS,\n      to: to,\n      toNamespace: toNS\n    }; // data.set('from', from)\n    // data.set('fromNamespace', fromNS)\n    // data.set('to', to)\n    // data.set('toNamespace', toNS)\n\n    console.log(data);\n    fetch(endpoint + '/api/test-connection', {\n      method: 'POST',\n      body: body\n    }).then(res => res.json()).then(d => console.log(\"DATA FROM POST\" + d));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      style: {\n        verticalAlign: \"true\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"podFrom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"Enter pod from\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"podFrom\",\n      name: \"from\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"podFrom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, \"Enter pod from namespace\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"podFromNs\",\n      name: \"fromNamespace\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"podFrom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"Enter service to\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"svcTo\",\n      name: \"to\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"podFrom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Enter service to namespace\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"svcToNs\",\n      name: \"toNamespace\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"Test Connection!\")), /*#__PURE__*/React.createElement(\"text\", {\n      style: {\n        backgroundColor: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Result\"));\n  }\n\n}\n\n;\nexport default Connection;","map":{"version":3,"sources":["/Users/philranzato/Documents/GoLang/go/src/k8s-intro/react/webapp/src/components/connection.js"],"names":["React","endpoint","Connection","Component","constructor","handleSubmit","bind","event","preventDefault","data","FormData","target","from","get","fromNS","to","toNS","body","fromNamespace","toNamespace","console","log","fetch","method","then","res","json","d","render","verticalAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\n\nlet endpoint = \"http://localhost\";\n\nclass Connection extends React.Component {\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const data = new FormData(event.target);\n        const from = data.get(\"from\")\n        const fromNS = data.get(\"fromNamespace\")\n        const to = data.get(\"to\")\n        const toNS = data.get(\"toNamespace\")\n\n        const body = {\n            from: from,\n            fromNamespace: fromNS,\n            to: to,\n            toNamespace: toNS\n        }\n        // data.set('from', from)\n        // data.set('fromNamespace', fromNS)\n        // data.set('to', to)\n        // data.set('toNamespace', toNS)\n\n        console.log(data)\n\n        fetch(endpoint + '/api/test-connection', {\n            method: 'POST',\n            body: body,\n        }).then((res) => res.json())\n        .then((d) => console.log(\"DATA FROM POST\" + d));\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit} style={{ verticalAlign: \"true\" }}>\n                    <label htmlFor=\"podFrom\">Enter pod from</label>\n                    <input id=\"podFrom\" name=\"from\" type=\"text\" />\n\n                    <label htmlFor=\"podFrom\">Enter pod from namespace</label>\n                    <input id=\"podFromNs\" name=\"fromNamespace\" type=\"text\" />\n\n                    <label htmlFor=\"podFrom\">Enter service to</label>\n                    <input id=\"svcTo\" name=\"to\" type=\"text\" />\n\n                    <label htmlFor=\"podFrom\">Enter service to namespace</label>\n                    <input id=\"svcToNs\" name=\"toNamespace\" type=\"text\" />\n\n                    <button>Test Connection!</button>\n                </form>\n                <text style={{ backgroundColor: \"white\" }}>Result</text>\n            </div>\n        );\n    }\n};\n\nexport default Connection\n"]},"metadata":{},"sourceType":"module"}