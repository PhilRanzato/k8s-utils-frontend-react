{"ast":null,"code":"var _jsxFileName = \"/Users/philranzato/Documents/GoLang/go/src/k8s-intro/react/webapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Pods from './components/pods';\nimport Services from './components/services'; // let endpoint = process.env.REACT_APP_GO_SERVER;\n\nlet endpoint = \"http://localhost\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pods: [],\n      services: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(endpoint + \"/api/pods\").then(res => res.json()).then(data => {\n      console.log(endpoint);\n      console.log(JSON.parse(data));\n      this.setState({\n        pods: JSON.parse(data),\n        services: this.state.services\n      });\n    }).catch(console.log);\n    fetch(endpoint + \"/api/services\").then(res => res.json()).then(data => {\n      this.setState({\n        pods: this.state.pods,\n        services: JSON.parse(data)\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"50vh\",\n        width: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Pods, {\n      pods: this.state.pods,\n      style: {\n        width: \"50vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Services, {\n      svcs: this.state.services,\n      style: {\n        width: \"50vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/philranzato/Documents/GoLang/go/src/k8s-intro/react/webapp/src/App.js"],"names":["React","Component","Pods","Services","endpoint","App","constructor","props","state","pods","services","componentDidMount","fetch","then","res","json","data","console","log","JSON","parse","setState","catch","render","height","width","display","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;;AACA,IAAIC,QAAQ,GAAG,kBAAf;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAECC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAACR,QAAQ,GAAG,WAAZ,CAAL,CACCS,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAECF,IAFD,CAEOG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAZ;AACA,WAAKK,QAAL,CAAc;AACZZ,QAAAA,IAAI,EAAEU,IAAI,CAACC,KAAL,CAAWJ,IAAX,CADM;AAEZN,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFT,OAAd;AAID,KATD,EAUCY,KAVD,CAUOL,OAAO,CAACC,GAVf;AAYAN,IAAAA,KAAK,CAACR,QAAQ,GAAG,eAAZ,CAAL,CACCS,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,WAAKK,QAAL,CAAc;AACZZ,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADL;AAEZC,QAAAA,QAAQ,EAAES,IAAI,CAACC,KAAL,CAAWJ,IAAX;AAFE,OAAd;AAID,KAPD,EAQCM,KARD,CAQOL,OAAO,CAACC,GARf;AASD;;AAEDK,EAAAA,MAAM,GAAI;AACR,wBACE;AAAK,MAAA,KAAK,EAAI;AAACC,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,KAAK,EAAC,OAAtB;AAA+BC,QAAAA,OAAO,EAAE,MAAxC;AAAgDC,QAAAA,cAAc,EAAE;AAAhE,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWC,IAAvB;AAA6B,MAAA,KAAK,EAAI;AAACgB,QAAAA,KAAK,EAAC;AAAP,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWE,QAA3B;AAAqC,MAAA,KAAK,EAAI;AAACe,QAAAA,KAAK,EAAC;AAAP,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF;AAMH;;AAxC2B;;AA2C5B,eAAepB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Pods from './components/pods';\nimport Services from './components/services';\n\n// let endpoint = process.env.REACT_APP_GO_SERVER;\nlet endpoint = \"http://localhost\";\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n        pods: [],\n        services: [],\n    };\n}\n  \n  componentDidMount() {\n    fetch(endpoint + \"/api/pods\")\n    .then((res) => res.json())\n    .then((data) => {\n      console.log(endpoint)\n      console.log(JSON.parse(data))\n      this.setState({ \n        pods: JSON.parse(data),\n        services: this.state.services,\n      })\n    })\n    .catch(console.log)\n\n    fetch(endpoint + \"/api/services\")\n    .then((res) => res.json())\n    .then((data) => {\n      this.setState({ \n        pods: this.state.pods,\n        services: JSON.parse(data), \n      })\n    })\n    .catch(console.log)\n  }\n\n  render () {\n    return (\n      <div style = {{height:\"50vh\", width:\"100vh\", display: \"flex\", justifyContent: \"space-between\"}}>\n      <Pods pods={this.state.pods} style = {{width:\"50vh\"}}></Pods>\n      <Services svcs={this.state.services} style = {{width:\"50vh\"}}></Services>\n      </div>\n    )\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}