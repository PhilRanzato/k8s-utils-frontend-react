{"ast":null,"code":"var _jsxFileName = \"/Users/philranzato/Documents/GoLang/go/src/k8s-intro/react/webapp/src/components/exec.js\";\nimport React from 'react';\nlet endpoint = \"http://localhost\";\n\nclass Exec extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      cmdOutput: \"Waiting for command\",\n      cmdColor: \"\"\n    };\n  }\n\n  refreshResult(cmdOut, cmdError) {\n    console.log(cmdOut);\n    console.log(cmdError);\n\n    switch (cmdError) {\n      case false:\n        this.setState({\n          cmdOutput: cmdOut,\n          cmdColor: \"green\"\n        });\n        break;\n\n      case true:\n        this.setState({\n          cmdOutput: cmdOut,\n          cmdColor: \"red\"\n        });\n        break;\n\n      default:\n        this.setState({\n          cmdOutput: cmdOut,\n          cmdColor: \"white\"\n        });\n        break;\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    const podName = data.get(\"podName\");\n    const podNamespace = data.get(\"podNamespace\");\n    const command = data.get(\"command\");\n    const body = {\n      \"podName\": podName,\n      \"podNamespace\": podNamespace,\n      \"command\": command\n    };\n    fetch(endpoint + '/api/pod-exec', {\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(res => {\n      res.json().then(data => {\n        console.log(JSON.parse(data).CommandOutput);\n        console.log(JSON.parse(data).Error);\n\n        switch (data) {\n          case true:\n            this.refreshResult(JSON.parse(data).CommandOutput, JSON.parse(data).Error);\n            break;\n\n          case false:\n            this.refreshResult(JSON.parse(data).CommandOutput, JSON.parse(data).Error);\n            break;\n\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      style: {\n        verticalAlign: \"true\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"pod\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, \"Enter pod name\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"podName\",\n      name: \"podName\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"podns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, \"Enter pod namespace\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"podNamespace\",\n      name: \"podNamespace\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"podFrom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, \"Enter command\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"command\",\n      name: \"command\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        height: \"2vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, \"Exec command!\"))), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        backgroundColor: this.state.cmdColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, this.state.cmdOutput))));\n  }\n\n}\n\n;\nexport default Exec;","map":{"version":3,"sources":["/Users/philranzato/Documents/GoLang/go/src/k8s-intro/react/webapp/src/components/exec.js"],"names":["React","endpoint","Exec","Component","constructor","handleSubmit","bind","state","cmdOutput","cmdColor","refreshResult","cmdOut","cmdError","console","log","setState","event","preventDefault","data","FormData","target","podName","get","podNamespace","command","body","fetch","method","JSON","stringify","then","res","json","parse","CommandOutput","Error","render","display","alignItems","justifyContent","verticalAlign","height","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\n\nlet endpoint = \"http://localhost\";\n\nclass Exec extends React.Component {\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = { cmdOutput: \"Waiting for command\", cmdColor: \"\" };\n    }\n\n    refreshResult(cmdOut, cmdError) {\n        console.log(cmdOut)\n        console.log(cmdError)\n        switch (cmdError) {\n            case false:\n                this.setState({\n                    cmdOutput: cmdOut,\n                    cmdColor: \"green\"\n                })\n                break;\n            case true:\n                this.setState({\n                    cmdOutput: cmdOut,\n                    cmdColor: \"red\",\n                });\n                break;\n            default:\n                this.setState({\n                    cmdOutput: cmdOut,\n                    cmdColor: \"white\",\n                })\n                break;\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const data = new FormData(event.target);\n        const podName = data.get(\"podName\")\n        const podNamespace = data.get(\"podNamespace\")\n        const command = data.get(\"command\")\n\n        const body = {\n            \"podName\": podName,\n            \"podNamespace\": podNamespace,\n            \"command\": command\n        }\n\n        fetch(endpoint + '/api/pod-exec', {\n            method: 'POST',\n            body: JSON.stringify(body),\n        }).then((res) => {\n            res.json().then(data => {\n                console.log(JSON.parse(data).CommandOutput)\n                console.log(JSON.parse(data).Error)\n                switch (data) {\n                    case true:\n                        this.refreshResult(JSON.parse(data).CommandOutput, JSON.parse(data).Error)\n                        break;\n                    case false:\n                        this.refreshResult(JSON.parse(data).CommandOutput, JSON.parse(data).Error)\n                        break;\n                    default:\n                        break;\n                }\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{ display: \"flex\", alignItems: 'center', justifyContent: 'center' }}>\n                    <form onSubmit={this.handleSubmit} style={{ verticalAlign: \"true\" }}>\n                        <div style={{ display: \"flex\", alignItems: 'center', justifyContent: 'center' }}>\n                            <div>\n                                <label htmlFor=\"pod\">Enter pod name</label>\n                                <br />\n                                <input id=\"podName\" name=\"podName\" type=\"text\" />\n                                <br />\n\n                                <label htmlFor=\"podns\">Enter pod namespace</label>\n                                <br />\n                                <input id=\"podNamespace\" name=\"podNamespace\" type=\"text\" />\n                                <br />\n\n                                <label htmlFor=\"podFrom\">Enter command</label>\n                                <br />\n                                <input id=\"command\" name=\"command\" type=\"text\" />\n                                <br />\n\n                            </div>\n                            <div style={{ display: \"flex\", alignItems: 'center', justifyContent: 'center' }}>\n\n                                <button style={{\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    height: \"2vh\"\n                                }}>Exec command!</button>\n                            </div>\n                        </div>\n                        <span style={{ backgroundColor: this.state.cmdColor }}>{this.state.cmdOutput}</span>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default Exec\n"]},"metadata":{},"sourceType":"module"}