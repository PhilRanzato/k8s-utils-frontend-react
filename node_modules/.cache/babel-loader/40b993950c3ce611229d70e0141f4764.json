{"ast":null,"code":"var _jsxFileName = \"/Users/philranzato/Documents/GoLang/go/src/k8s-intro/react/webapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Pods from './components/pods';\nlet endpoint = \"http://localhost\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pods: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(endpoint + \"/get-pods\").then(res => res.json()).then(data => {\n      this.setState({\n        pods: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Pods, {\n      pods: this.state.pods,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/philranzato/Documents/GoLang/go/src/k8s-intro/react/webapp/src/App.js"],"names":["React","Component","Pods","endpoint","App","state","pods","componentDidMount","fetch","then","res","json","data","setState","catch","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,IAAIC,QAAQ,GAAG,kBAAf;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE;AADA,KADkB;AAAA;;AAK1BC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAACL,QAAQ,GAAG,WAAZ,CAAL,CACCM,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAEM;AAAR,OAAd;AACD,KAJD,EAKCE,KALD,CAKOC,OAAO,CAACC,GALf;AAMD;;AAEDC,EAAAA,MAAM,GAAI;AACR,wBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGH;;AAlB2B;;AAqB5B,eAAeF,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Pods from './components/pods';\n\nlet endpoint = \"http://localhost\";\n\nclass App extends Component {\n  state = {\n    pods: []\n  }\n  \n  componentDidMount() {\n    fetch(endpoint + \"/get-pods\")\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ pods: data })\n    })\n    .catch(console.log)\n  }\n\n  render () {\n    return (\n      <Pods pods={this.state.pods} />\n    )\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}