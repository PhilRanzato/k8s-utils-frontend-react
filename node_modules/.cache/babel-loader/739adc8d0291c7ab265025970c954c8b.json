{"ast":null,"code":"var _jsxFileName = \"/Users/philranzato/Documents/GoLang/go/src/k8s-intro/react/webapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Pods from './components/pods';\nlet endpoint = \"http://localhost\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pods: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(endpoint + \"/pod\").then(res => res.json(), console.log(res)).then(data => {\n      // this.setState({ pods: data })\n      console.log('This is your data', data);\n    }).catch(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Pods, {\n      pods: this.state.pods,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/philranzato/Documents/GoLang/go/src/k8s-intro/react/webapp/src/App.js"],"names":["React","Component","Pods","endpoint","App","state","pods","componentDidMount","fetch","then","res","json","console","log","data","catch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,IAAIC,QAAQ,GAAG,kBAAf;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE;AADA,KADkB;AAAA;;AAK1BC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAACL,QAAQ,GAAG,MAAZ,CAAL,CACCM,IADD,CACMC,GAAG,IACPA,GAAG,CAACC,IAAJ,EAFF,EAGEC,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAHF,EAICD,IAJD,CAIOK,IAAD,IAAU;AACd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCC,IAAjC;AACD,KAPD,EAQCC,KARD,CAQOH,OAAO,CAACC,GARf;AASD;;AAEDG,EAAAA,MAAM,GAAI;AACR,wBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKX,KAAL,CAAWC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGH;;AArB2B;;AAwB5B,eAAeF,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Pods from './components/pods';\n\nlet endpoint = \"http://localhost\";\n\nclass App extends Component {\n  state = {\n    pods: []\n  }\n  \n  componentDidMount() {\n    fetch(endpoint + \"/pod\")\n    .then(res => \n      res.json(),\n      console.log(res))\n    .then((data) => {\n      // this.setState({ pods: data })\n      console.log('This is your data', data)\n    })\n    .catch(console.log)\n  }\n\n  render () {\n    return (\n      <Pods pods={this.state.pods} />\n    )\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}